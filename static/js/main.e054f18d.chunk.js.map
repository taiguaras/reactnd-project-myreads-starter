{"version":3,"sources":["assets/img/no-photo.jpg","icons/logo.svg","components/Book.js","components/Bookshelf.js","components/Manager.js","pages/Main.js","pages/Search.js","components/Navbar.js","BooksAPI.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Book","handleMoveBookToShelf","event","shelf","metaData","_this","props","onUpdateShelf","shelfStatus","react_default","a","createElement","className","aria-hidden","authors","map","author","key","_this2","this","style","width","height","backgroundSize","backgroundImage","concat","imageLinks","thumbnail","NoImage","title","subtitle","mapAuthors","ShelfNameToTitle","onClick","Component","Bookshelf","_this$props","books","shelfDisplay","book","components_Book","id","Manager","filteredBooks","filter","b","shelfName","margin","components_Bookshelf","Main","components_Manager","Link","to","setState","showSearchPage","Search","SearchBook","onSearchBook","target","value","query","loading","type","placeholder","onChange","length","Navbar","Menu","fixed","Container","Item","as","header","Image","size","src","logo","marginRight","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","data","BooksApp","state","searchResults","SearchIsLoading","updateShelf","SelectedBook","isNew","_this$state","BooksAPI","forEach","push","clearTimeout","debouncing","setTimeout","Results","bookResultMap","bookItem","_this$state2","BrowserRouter","Switch","Route","path","exact","render","components_Navbar","pages_Main","pages_Search","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e054f18d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-photo.7dd4e4d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NoImage from './../assets/img/no-photo.jpg';\r\nclass Book extends Component {\r\n\r\n  static propTypes = {\r\n    metaData: PropTypes.object.isRequired,\r\n  }\r\n\r\n  ShelfNameToTitle(shelfStatus) {\r\n    switch (shelfStatus) {\r\n      case 'currentlyReading': return ( <button className=\"ui icon left labeled button\"><i aria-hidden=\"true\" className=\"book icon\"></i>Currently Reading</button>) ;\r\n      case 'wantToRead': return ( <div><button className=\"ui icon left labeled button\"><i aria-hidden=\"true\" className=\"heart icon\"></i>Want to read</button></div>);\r\n      case 'read': return ( <div><button className=\"ui icon left labeled button\"><i aria-hidden=\"true\" className=\"checkmark icon\"></i>Read</button></div>);\r\n      default: return ( <div><button className=\"ui icon left labeled button\"><i aria-hidden=\"true\" className=\"times circle icon\"></i>None</button></div>);\r\n    }\r\n  }\r\n  \r\n  handleMoveBookToShelf = (event, shelf, metaData) => {\r\n    this.props.onUpdateShelf(metaData, shelf);    \r\n  }\r\n\r\n  mapAuthors(authors){\r\n    return (    authors.map( author => <p className=\"author\" key={author}>{author}</p>) )\r\n  }\r\n  \r\n\r\n  render() {\r\n\r\n    const {metaData} = this.props;\r\n\r\n    return (    \r\n          <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n            width: `100%`,\r\n            height: `100%`,\r\n            backgroundSize: 'cover',\r\n            backgroundImage: `url(${ metaData.imageLinks ? metaData.imageLinks.thumbnail : NoImage })`}}>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"book-title\">{metaData.title}</div>\r\n        <div className=\"book-subtitle\">{metaData.subtitle}</div>\r\n        <div className=\"book-authors\">{metaData.authors ? this.mapAuthors(metaData.authors) : \"No authors found.\"}</div>\r\n        <div className=\"book-shelf\"> {this.ShelfNameToTitle(metaData.shelf)} </div>\r\n        \r\n        <div className=\"extra\">          \r\n          <button className=\"button\" onClick={event => this.handleMoveBookToShelf(event, 'currentlyReading', metaData)}>\r\n          <i aria-hidden=\"true\" title=\"Currently Reading\" className=\"book icon\"></i><p>Currently Reading</p>\r\n          </button>\r\n          <button className=\"button\" onClick={event => this.handleMoveBookToShelf(event, 'wantToRead', metaData)}>\r\n          <i aria-hidden=\"true\" title=\"Want to Read\" className=\"heart icon\"></i><p>Want to Read</p>\r\n          </button>\r\n          <button className=\"button\" onClick={event => this.handleMoveBookToShelf(event, 'read', metaData)}>\r\n          <i aria-hidden=\"true\" title=\"Read\" className=\"checkmark icon\"></i><p>Read</p>\r\n          </button>\r\n          <button className=\"button\" onClick={event => this.handleMoveBookToShelf(event, 'none', metaData)}>\r\n          <i aria-hidden=\"true\" title=\"Clear\" className=\"refresh icon\"></i><p>Clear</p>\r\n          </button>\r\n        </div>\r\n      </div>        \r\n\r\n      );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Book;","import React, { Component } from 'react';\r\nimport Book from './Book';\r\n\r\n// import { Container } from './styles';\r\n\r\n\r\nclass Bookshelf extends Component {\r\n    \r\n    render() {\r\n\r\n      const { books, shelfDisplay } = this.props;      \r\n        \r\n        return (   \r\n            <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">{shelfDisplay}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                    <div className=\"books-grid\">\r\n\r\n                    {books.map((book) => (\r\n\r\n                        <Book metaData={book} key={book.id} onUpdateShelf={this.props.onUpdateShelf} book={books}/>                        \r\n                          \r\n                     ))}                     \r\n\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                )\r\n            }\r\n        }\r\n            \r\nexport default Bookshelf;\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Bookshelf from './Bookshelf';\r\n\r\nconst Manager = props => {\r\n    const filteredBooks = props.books.filter((b) => (\r\n        b.shelf === props.shelfName\r\n    ))\r\n\r\n    return <div style={{ margin: '10px' }}>\r\n        <Bookshelf books={filteredBooks} onUpdateShelf={props.onUpdateShelf} shelfName={props.shelfName} shelfDisplay={props.shelfDisplay} />\r\n    </div>;\r\n};\r\n\r\nManager.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    shelfName: PropTypes.string.isRequired,\r\n    shelfDisplay: PropTypes.string.isRequired,\r\n    onUpdateShelf: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Manager","import React, { Component } from 'react';\r\nimport Manager from '../components/Manager';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n\r\n        const { books, onUpdateShelf } = this.props; \r\n\r\n\r\n        return (\r\n\r\n         <div className=\"page\">\r\n            <div className=\"list-books\">          \r\n                <div className=\"list-books-content\">\r\n                    <Manager books={books} shelfName={\"currentlyReading\"} shelfDisplay={\"Currently Reading\"} onUpdateShelf={onUpdateShelf} />\r\n                    <Manager books={books} shelfName={\"wantToRead\"} shelfDisplay={\"Want to Read\"} onUpdateShelf={onUpdateShelf}/>\r\n                    <Manager books={books} shelfName={\"read\"} shelfDisplay={\"Read\"} onUpdateShelf={onUpdateShelf}/>\r\n                </div>\r\n                <div className=\"open-search\">\r\n                  <Link to={`/search`}> <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button></Link>\r\n                </div>\r\n            </div>\r\n          </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nimport Bookshelf from '../components/Bookshelf';\r\n\r\nclass Search extends Component {\r\n\r\n    static propTypes = {\r\n        books: PropTypes.array.isRequired,\r\n    }\r\n\r\n    SearchBook = (event) => {\r\n        this.props.onSearchBook(event.target.value);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { books, query, loading, onUpdateShelf } = this.props;\r\n\r\n\r\n        return (\r\n            <div className=\"page\">\r\n                <div className=\"search-books\">\r\n                    <div className=\"search-books-bar\">\r\n                    <Link to={`/`}><button className=\"close-search\">Close</button></Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        {/*\r\n                        NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                        You can find these search terms here:\r\n                        https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                        However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                        you don't find a specific author or title. Every search is limited by search terms.\r\n                        */}\r\n                        <input type=\"text\" placeholder=\"Search by title or author\" value={query} onChange={event => this.SearchBook(event)}/>\r\n\r\n                    </div>\r\n                    </div>\r\n                            <div id=\"search-result-container\">\r\n                                <h3>Search results</h3>                                \r\n                                \r\n                                <Bookshelf books={books} onUpdateShelf={onUpdateShelf} />\r\n                                {(loading === true) &&\r\n                                    <div className=\"loading\">\r\n                                        <span>Loading...</span><br /><br />\r\n                                    </div>\r\n                                }\r\n                                {(books.length === 0 && loading === false) &&\r\n                                    <div className=\"no-results\">No results found.</div>\r\n                                }\r\n                            </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Search;\r\n\r\n\r\n","import React from 'react';\r\nimport { Container,  Image,  Menu } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from './../icons/logo.svg';\r\n\r\nconst Navbar = () => (\r\n        <Menu fixed=\"top\">\r\n            <Container>\r\n                <Menu.Item as=\"a\" header>\r\n                <Image size=\"mini\" src={logo} style={{ marginRight: '1.5em' }} />\r\n                My Reads\r\n                </Menu.Item>      \r\n                <Menu.Item as=\"a\"><Link to={`/`}>Home</Link></Menu.Item>      \r\n                <Menu.Item as=\"a\"><Link to={`/search`}>Search</Link></Menu.Item>  \r\n            </Container>\r\n        </Menu>\r\n);\r\n\r\nexport default Navbar;","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Main from './pages/Main';\r\nimport Search from './pages/Search';\r\nimport Navbar from './components/Navbar';\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\n\r\nclass BooksApp extends React.Component { \r\n\r\n  state = {\r\n    books: [],\r\n    query: '',\r\n    searchResults: [],\r\n    SearchIsLoading: false\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // API Get ALL\r\n    const books = await BooksAPI.getAll();\r\n    this.setState({ books });\r\n  }\r\n\r\n  updateShelf = (SelectedBook, shelf) => {\r\n    let isNew = false;\r\n    const { books, searchResults } = this.state;\r\n\r\n    BooksAPI.update(SelectedBook, shelf).then(() => {\r\n      searchResults.forEach((book) => {\r\n        if (book.id === SelectedBook.id) {\r\n          book.shelf = shelf;\r\n        }\r\n      })\r\n\r\n      books.map((book) => {\r\n        if (book.id === SelectedBook.id) {\r\n          book.shelf = shelf;\r\n          isNew = true;\r\n        }\r\n        return book;\r\n      });\r\n\r\n      if (isNew === false) {\r\n        SelectedBook.shelf = shelf;\r\n        books.push(SelectedBook);\r\n      }\r\n\r\n      this.setState({\r\n        books,\r\n        searchResults\r\n      });\r\n    })\r\n  }\r\n\r\n  SearchBook = (SearchBook) => {\r\n    this.setState({\r\n      searchResults: [],\r\n      query: SearchBook,\r\n      SearchIsLoading: false\r\n    });\r\n\r\n    clearTimeout(this.debouncing);\r\n\r\n    if (SearchBook !== '') {\r\n      this.setState({\r\n        SearchIsLoading: true\r\n      });\r\n\r\n      this.debouncing = setTimeout(() => {\r\n        BooksAPI.search(this.state.query).then((Results) => {\r\n          this.setState({\r\n            SearchIsLoading: false\r\n          });\r\n\r\n          if (Results.length > 0) {\r\n            const bookResultMap = Results.map((bookItem) => {\r\n              bookItem.shelf = 'none';\r\n\r\n              this.state.books.forEach((book) => {\r\n                if (bookItem.id === book.id) {\r\n                  bookItem.shelf = book.shelf;\r\n                }\r\n              })\r\n\r\n              return bookItem;\r\n            });\r\n\r\n            this.setState({\r\n              searchResults: bookResultMap\r\n            });\r\n          } else {\r\n            this.setState({\r\n              searchResults: []\r\n            });\r\n          }\r\n        });\r\n      }, 1500);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const { books, query, searchResults, SearchIsLoading } = this.state;\r\n\r\n    return (\r\n\r\n      <BrowserRouter>\r\n        <Switch>\r\n        \r\n          <Route path=\"/\" exact={true} render={() => ( \r\n            <div className=\"layout\">\r\n              <Navbar/>\r\n              <Main books={books} onUpdateShelf={this.updateShelf} /> \r\n            </div>\r\n          )} />\r\n\r\n          <Route path=\"/search\" render={() => (\r\n            <div className=\"layout\">\r\n              <Search books={searchResults} query={query} loading={SearchIsLoading} onUpdateShelf={this.updateShelf} onSearchBook={this.SearchBook} />\r\n            </div>\r\n          )} />\r\n          </Switch>\r\n      </BrowserRouter>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}